name: "publish"
on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-10.15, ubuntu-18.04, windows-2019]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
      - name: install app dependencies and info
        run: npm install && npm run tauri info


      - name: setup binaries (Windows only)
        if: matrix.platform == 'windows-2019'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.2.3 lair_keystore
          $LkPath = Get-Command lair-keystore | Select-Object -ExpandProperty Definition
          Copy-Item $LkPath -Destination src-tauri/bins/lair-keystore-v0.2.3-x86_64-pc-windows-msvc.exe


          cargo install holochain --version 0.1.0-beta-rc.2 --locked --features db-encryption
          $HcPath = Get-Command holochain | Select-Object -ExpandProperty Definition
          Copy-Item $HcPath -Destination src-tauri/bins/holochain-v0.1.0-beta-rc.2-x86_64-pc-windows-msvc.exe

          # NEW_VERSION: install new holochain version and copy its binary to the tauri path


      - name: setup binaries (macos only)
        if: matrix.platform == 'macos-10.15'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.2.3 lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-v0.2.3-x86_64-apple-darwin


          cargo install holochain --version 0.1.0-beta-rc.2 --locked --features db-encryption
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-v0.1.0-beta-rc.2-x86_64-apple-darwin

          # NEW_VERSION: install new holochain version and copy its binary to the tauri path

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-18.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libcanberra-gtk-module libcanberra-gtk3-module build-essential curl wget libssl-dev libgtk-3-dev squashfs-tools libgtksourceview-3.0-dev libappindicator3-dev patchelf librsvg2-dev ayatana-indicator-application


      - name: setup binaries (ubuntu only)
        if: matrix.platform == 'ubuntu-18.04'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.2.3 lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-v0.2.3-x86_64-unknown-linux-gnu


          cargo install holochain --version 0.1.0-beta-rc.2 --locked --features db-encryption
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-v0.1.0-beta-rc.2-x86_64-unknown-linux-gnu

          # NEW_VERSION: install new holochain version and copy its binary to the tauri path

      - name: build the app
        run: npm run build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          projectPath: src-tauri # specifying to prevent action from looking for artifacts in crates/hc_launch/scr-tauri
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Holochain Launcher v__VERSION__"
          releaseBody: "See assets below to download this version and install."
          releaseDraft: true
          prerelease: true
