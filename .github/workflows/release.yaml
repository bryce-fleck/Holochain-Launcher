name: "publish"
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: download caddy (Windows only)
      if: matrix.platform == 'windows-latest'
      run: |
        mkdir src-tauri/bins
        curl.exe --output src-tauri/bins/caddy_2.4.3_windows_amd64.zip https://github.com/caddyserver/caddy/releases/download/v2.4.3/caddy_2.4.3_windows_amd64.zip
        7z x src-tauri/bins/caddy_2.4.3_windows_amd64.zip
        rename src-tauri/bins/caddy.exe src-tauri/bins/caddy-x86_64-pc-windows-msvc.exe
    - name: download caddy (MacOS only)
      if: matrix.platform == 'macos-latest'
      run: |
        mkdir src-tauri/bins
        curl --output src-tauri/bins/caddy-x86_64-apple-darwin https://caddyserver.com/api/download?os=darwin&arch=amd64&idempotency=30565467962387
    - name: install webkit2gtk (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
    - name: install Caddy (ubuntu)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
        curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo apt-key add -
        curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list
        sudo apt update
        sudo apt install caddy 
    - name: install Holochain
      run: |
        cargo install --git https://github.com/holochain/holochain --rev 1eb5b70f64b2188e6ef0c876367838b8a6a2015d holochain --force
        cargo install lair_keystore --version 0.0.1-alpha.12
    - name: setup binaries (ubuntu & MacOS)
      if: matrix.platform != 'windows-latest'
      run: |
        sh scripts/setup-binaries.sh
    - name: install app dependencies and build it
      run: npm i && npm run tauri:build
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: "App v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: true
        npmScript: "tauri:build"
        configPath: "src-tauri/tauri.conf.json"
